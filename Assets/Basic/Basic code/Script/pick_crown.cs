using System.Collections; using System.Collections.Generic; using UnityEngine; using DG.Tweening;  public class pick_crown : MonoBehaviour{  	public GameObject MainLine; 	private MainLine MainLineCom; 	public Vector3 Resurrection_position = Vector3.zero; 	public Vector3 Resurrection_FoWard; 	public float Resurrection_Audio_Time = 0; 	public int Resurrection_Percentage = 0;     public GameObject remains;     public GameObject crown_icon; 	public GameObject CrownEffect; 	private bool picked = false; 	private GameObject TempEffect; 	[HideInInspector]public bool used = false;      void Start () { 		MainLineCom = MainLine.GetComponent<MainLine> (); 	}      void OnTriggerEnter(Collider other)     { 		if (other.GetComponent<MainLine> () != null && picked == false) { 			Instantiate (remains, this.transform.position, this.transform.rotation); 			crown_icon.GetComponent<MeshRenderer> ().material.DOFloat (1f, "_233", 3f); 			if (MainLineCom.Crown1 == null) { 				MainLineCom.Crown1 = this.gameObject; 			} else if (MainLineCom.Crown2 == null) { 				MainLineCom.Crown2 = this.gameObject; 			} else { 				MainLineCom.Crown3 = this.gameObject; 			} 			this.GetComponent<MeshRenderer> ().enabled = false; 			TempEffect = Instantiate (CrownEffect, this.transform.position, Quaternion.Euler(Vector3.zero)); 			TempEffect.transform.DOMove (crown_icon.transform.position, 3f, false); 			Destroy (TempEffect, 3f); 			picked = true; 		}     }  	public void Easter (){ 		used = true; 		crown_icon.GetComponent<MeshRenderer> ().material.DOFloat (0f, "_233", 3f);; 		MainLineCom.NowPercentage = Resurrection_Percentage; 		MainLineCom.Way.Enqueue (MainLineCom.LineBody); 		MainLineCom.LineBody = null; 		int TailCound = MainLineCom.Way.Count; 		for (int i = 0; i < TailCound; i++) { 			Destroy (MainLineCom.Way.Dequeue ()); 		} 		MainLine.GetComponent<Rigidbody> ().isKinematic = false; 		MainLine.transform.position = Resurrection_position; 		MainLineCom.NowForward = Resurrection_FoWard; 		MainLineCom.transform.localEulerAngles = Resurrection_FoWard; 		MainLineCom.Over = false; 		MainLineCom.start = false; 		MainLineCom.Is_Stop = true; 		if (MainLineCom.start_audio) 			MainLineCom.start_audio.GetComponent<AudioSource> ().time = Resurrection_Audio_Time; 	} } 